#pragma checksum "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d2da84762b961518c7f284369f059a9be2232a4b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Edit), @"mvc.1.0.view", @"/Views/Home/Edit.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\projects\xornent\vision\vision\Views\_ViewImports.cshtml"
using Vision;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\projects\xornent\vision\vision\Views\_ViewImports.cshtml"
using Vision.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d2da84762b961518c7f284369f059a9be2232a4b", @"/Views/Home/Edit.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"27595b0b0c3117b9b2889c29d36f3dc01d8b86d2", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Edit : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<(Page _Page, Record _Record)>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Edit", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("formEdit"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("spectrum-Form vision-form-emphasis"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/editor/min/vs/loader.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml"
   ViewData["Title"] = "Edit Page";
    ViewData["Side"] = false; 

#line default
#line hidden
#nullable disable
            WriteLiteral("\n<h1 class=\"spectrum-Heading spectrum-Heading--sizeXL spectrum-Heading--serif\">Edit Page: ");
#nullable restore
#line 5 "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml"
                                                                                    Write(Html.Raw(Model._Page.Title.Split('#')[0]));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h1>

<p class=""spectrum-Body spectrum-Body--sizeM vision-ui-paragraph"">
    Edits changes the content of pages. It is the basis of collaborative writing. Commit the changes below
    and summarize them. On how to make appropriate changes, see the Further Reading section below.
</p>

<div id=""monaco-div"" style=""width: 100%;height: 450px; margin-top: 15px; margin-bottom:15px"">
</div>

<h2 class=""spectrum-Heading spectrum-Heading--sizeM spectrum-Heading--serif vision-ui-title"">Summerize and Commit Changes</h2>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d2da84762b961518c7f284369f059a9be2232a4b5822", async() => {
                WriteLiteral("\n    <input style=\"display:none\" name=\"id\" id=\"id-id\"");
                BeginWriteAttribute("value", " value=\"", 888, "\"", 911, 1);
#nullable restore
#line 18 "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml"
WriteAttributeValue("", 896, Model._Page.Id, 896, 15, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" />\n    <input style=\"display:none\" name=\"tags\" id=\"id-tags\"");
                BeginWriteAttribute("value", " value=\"", 972, "\"", 1003, 1);
#nullable restore
#line 19 "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml"
WriteAttributeValue("", 980, Model._Record.Category, 980, 23, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" />\n    <textarea style=\"display:none\" name=\"history\" id=\"id-hist\">");
#nullable restore
#line 20 "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml"
                                                          Write(Model._Record.Body);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</textarea>
    <div class=""spectrum-Form-item"">
        <label class=""spectrum-FieldLabel spectrum-FieldLabel--sizeM spectrum-Form-itemLabel spectrum-FieldLabel--right"">
            Summary
        </label>
        <div class=""spectrum-Form-itemField"">
            <div class=""spectrum-Textfield spectrum-Textfield--multiline"" style=""width: 400px; height: 150px;"">
                <textarea class=""spectrum-Textfield-input"" name=""summary"" type=""text"" placeholder=""Summarize your edit in a few sentences, this will be displayed in the history of the page for better understanding of your edit.""></textarea>
            </div>
        </div>
    </div>
    <div class=""spectrum-Form-item"">
        <label> </label>
        <div class=""spectrum-Form-itemField"">
            <button onclick=""if (loadup()) { formEdit.submit(); }"" class=""spectrum-Button spectrum-Button--primary spectrum-Button--sizeM"" style=""left: 275px;"">
                <svg class=""spectrum-Icon spectrum-Icon--sizeM"" focusable=""false"" aria-hidden=""true"" ar");
                WriteLiteral("ia-label=\"Edit\">\n                    <use xlink:href=\"#spectrum-icon-18-Send\"></use>\n                </svg>\n                <span class=\"spectrum-Button-label\">Commit Edit</span>\n            </button>\n        </div>\n    </div>\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"


<h2 class=""spectrum-Heading spectrum-Heading--sizeM spectrum-Heading--serif vision-ui-title"">Further Reading</h2>
<div class=""vision-rightsided"">
    <p class=""spectrum-Body spectrum-Body--sizeS"">
        Vision Framework uses a simplified version control system to manage the previous edits of a page.
        Providing insights such as History View and Merge operations.
    </p>
    <p class=""spectrum-Body spectrum-Body--sizeM"">
        <a class=""spectrum-Link spectrum-Link--sizeM"">Vision Framework: Edit Conflicts</a>
    </p>
    <p class=""spectrum-Body spectrum-Body--sizeM"">
        <a class=""spectrum-Link spectrum-Link--sizeM"">Vision Framework: History</a>
    </p>
    <p class=""spectrum-Body spectrum-Body--sizeM"">
        <a class=""spectrum-Link spectrum-Link--sizeM"">Vision Framework: Deletion</a>
    </p>
    <p class=""spectrum-Body spectrum-Body--sizeM"">
        <a class=""spectrum-Link spectrum-Link--sizeM"">Vision Framework: Editions</a>
    </p>
</div>

<div class=""vision-leftsided"">
    <p class=""s");
            WriteLiteral(@"pectrum-Body spectrum-Body--sizeS"">
        It's extraordinarily important to know what makes up an appropriate edit. This will better contribute
        to the content and help people collaborate easier.
    </p>

    <p class=""spectrum-Body spectrum-Body--sizeM"">
        <a class=""spectrum-Link spectrum-Link--sizeM"">Vision Framework: Edit Policies</a>
    </p>

    <div style=""height: 20px""></div>
    <p class=""spectrum-Body spectrum-Body--sizeS"">
        The page document is recorded and managed in the form of Vision Markup Language(VML) source code. This is a
        lite markup language with macro support. Learn the features and specification of VML helps better editing.
    </p>

    <p class=""spectrum-Body spectrum-Body--sizeM"">
        <a class=""spectrum-Link spectrum-Link--sizeM"">Vision Framework: Vision Markup Language Specification</a>
    </p>
    <p class=""spectrum-Body spectrum-Body--sizeM"">
        <a class=""spectrum-Link spectrum-Link--sizeM"">Vision Framework: Cheatsheet</a>
    </p>
    <p cl");
            WriteLiteral("ass=\"spectrum-Body spectrum-Body--sizeM\">\n        <a class=\"spectrum-Link spectrum-Link--sizeM\">Vision Framework: Sandbox</a>\n    </p>\n\n</div>\n\n\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d2da84762b961518c7f284369f059a9be2232a4b12230", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>

    var meditor = null;

    // Language Services
    require.config({ paths: { 'vs': '../../editor/min/vs' } });
    require(['vs/editor/editor.main'], function () {

        // Register a new language
        monaco.languages.register({ id: 'vmkup' });

        // Register a tokens provider for the language
        monaco.languages.setMonarchTokensProvider('vmkup', {
            tokenizer: {
                root: [
                    [/\{\{\{[^)]*?\}\}\}/gm, ""ref""],
                    [/\{\{[^)]*?\}\}/gm, ""note""],
                    [/\[\[[^)]*?\]\]/gm, ""link""],
                    [/\{\[[^)]*?\]\}/gm, ""gallery""],
                    [/%%[^)]*?%%/gm, ""quote""],
                    [/\^\^[^)]*?\^\^/gm, ""code""],
                    [/'''''[^)]*?'''''/gm, ""ib""],
                    [/'''[^)]*?'''/gm, ""i""],
                    [/''[^)]*?''/gm, ""b""],
                    [/^###*[^)]*/gm, ""h""],
                    [/\([^)]*?:/gm, ""template""],
                    [/\$\[[^)]*?\]/gm, ""byval""],
          ");
            WriteLiteral("          [/\\");
#nullable restore
#line 122 "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml"
                   Write(new Microsoft.AspNetCore.Html.HtmlString("@"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"\{[^)]*?\}/gm, ""var""],
                    //[/^:*\**:*\**:*\**:*\**:*\**:*\**:*/gm, ""list""],
                    //[/^```[^)]*/gm, ""section""]]
                    ]
            }
        });

        // Define a new theme that contains only rules that match this language
        monaco.editor.defineTheme('vmkupTheme', {
            base: 'vs',
            inherit: false,
            rules: [
                { token: 'h', foreground: 'b300d4', fontStyle: 'bold' },
                { token: 'b', foreground: '000000', fontStyle: 'bold' },
                { token: 'i', foreground: '000000', fontStyle: 'italic' },
                { token: 'ib', foreground: '000000', fontStyle: 'bolditalic' },
                { token: 'template', foreground: '1857b5' },
                { token: 'byval', foreground: '179800' },
                { token: 'var', foreground: 'ff0000' },
                { token: 'list', foreground: 'd36aff' },
                //{ token: 'section', foreground: '00bec7' },
                { token: 'ref', f");
            WriteLiteral(@"oreground: '218c55' },
                { token: 'note', foreground: '548c21' },
                { token: 'link', foreground: '007eff' },
                { token: 'gallery', foreground: '007eff' },
                { token: 'quote', foreground: '696969' },
                { token: 'code', foreground: '696969' },
                //{ token: 'preprocessor', foreground: 'ff66a6' }
            ]
        });

        // Register a completion item provider for the new language
        monaco.languages.registerCompletionItemProvider('vmkup', {
            provideCompletionItems: () => {
                var suggestions = [{
                    label: 'if:',
                    kind: monaco.languages.CompletionItemKind.Snippet,
                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,
                    insertText: 'if: (evaluation: ${1:variable})\n' +
                        '     (content: ${2:if evaluation is true ...} )\n' +
                        '     (otherwise: ${3}))'
");
            WriteLiteral(@"                }, {
                        label: 'for:',
                        kind: monaco.languages.CompletionItemKind.Snippet,
                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,
                        insertText: 'for: (define: ${1:loop variable})\n' +
                            '      (from: ${2}) (to: ${3}) (step: ${4})\n' +
                            '      (content: ${3}))'
                    }, {
                        label: 'template:',
                        kind: monaco.languages.CompletionItemKind.Snippet,
                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,
                        insertText: 'template: (name: ${1})\n' +
                                    '           (content: ${2:to replace the template ...}))'
                    }, {
                        label: 'set:',
                        kind: monaco.languages.CompletionItemKind.Snippet,
                        insertTex");
            WriteLiteral(@"tRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,
                        insertText: 'set: (variable: ${1})\n' +
                                    '      (value: ${2}))'
                    }, {
                        label: 'toc:',
                        kind: monaco.languages.CompletionItemKind.Snippet,
                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,
                        insertText: 'toc:)'
                    }, {
                        label: 'referencelist:',
                        kind: monaco.languages.CompletionItemKind.Snippet,
                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,
                        insertText: 'referencelist:)'
                    }, {
                        label: '(externallist:',
                        kind: monaco.languages.CompletionItemKind.Snippet,
                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.");
            WriteLiteral(@"InsertAsSnippet,
                        insertText: '(externallist:)'
                    }, {
                        label: 'footnotelist:',
                        kind: monaco.languages.CompletionItemKind.Snippet,
                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,
                        insertText: 'footnotelist:)'
                    }, {
                        label: 'sign:',
                        kind: monaco.languages.CompletionItemKind.Snippet,
                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,
                        insertText: 'sign:)'
                    }, {
                        label: 'break:',
                        kind: monaco.languages.CompletionItemKind.Snippet,
                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,
                        insertText: 'break:)'
                    }, {
                        label: 'model:',
  ");
            WriteLiteral(@"                      kind: monaco.languages.CompletionItemKind.Snippet,
                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,
                        insertText: 'model: (name: ${1})\n' +
                                    '        (content: ${2}))'
                    }
");
#nullable restore
#line 219 "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml"
                     foreach(var templs in Vision.Markup.Templating.TemplateRegistry.Parameters) {
                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 220 "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml"
                    Write(new Microsoft.AspNetCore.Html.HtmlString(", {"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 221 "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml"
                    Write(new Microsoft.AspNetCore.Html.HtmlString("label: '"+templs.Key+"',"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 222 "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml"
                    Write(new Microsoft.AspNetCore.Html.HtmlString("kind: monaco.languages.CompletionItemKind.Snippet,"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 223 "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml"
                    Write(new Microsoft.AspNetCore.Html.HtmlString("insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 223 "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml"
                                                                                                                                                      
                        string s = "insertText: '" + templs.Key + ": ";
                        int i = 1;
                        foreach(string par in templs.Value) {
                            s = s + "(" + par.Trim() + ": ${" + i + "})\\n";
                            s = s + Vision.Utilities.Encoding.GetSpaces(templs.Key.Length + 3);
                            i++;
                        }
                        s = s.TrimEnd() + ")'";
                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 232 "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml"
                    Write(new Microsoft.AspNetCore.Html.HtmlString(s));

#line default
#line hidden
#nullable disable
#nullable restore
#line 233 "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml"
                    Write(new Microsoft.AspNetCore.Html.HtmlString("}"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 233 "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml"
                                                                        
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                ];
                return { suggestions: suggestions };
            }
        });

        // import * as monaco from '../editor/esm/vs/editor/editor.api.js';
        meditor = monaco.editor.create(document.getElementById(""monaco-div""), {
            value: """);
#nullable restore
#line 242 "D:\projects\xornent\vision\vision\Views\Home\Edit.cshtml"
               Write(Html.Raw(Model._Record.Body.Replace("\r", @"\r").Replace("\t", @"\t").Replace("\n", @"\n").Replace("\"",@"\"+"\"")));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
            language: ""vmkup"",

            lineNumbers: ""on"",
            roundedSelection: false,
            scrollBeyondLastLine: true,
            readOnly: false,
            theme: ""vmkupTheme"",
        });
    });

    var initialized = false;

    function loadup() {
        try {
            var ibd = document.getElementById(""id-hist"");
            var str = meditor.getValue();
            ibd.value = str;
            return true;
        } catch (ex) { return false; }
    }

    setTimeout(loadup, 800);
    window.onresize = () => { meditor.layout(); }
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<(Page _Page, Record _Record)> Html { get; private set; }
    }
}
#pragma warning restore 1591
